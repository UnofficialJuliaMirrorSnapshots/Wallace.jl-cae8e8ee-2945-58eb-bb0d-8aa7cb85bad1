type: algorithm/simple_evolutionary_algorithm

evaluator<evaluator/multiplexer>:
  bits: 3

termination:
  iterations<criterion/iterations>:
    limit: 1000

_my_species<species/simple>:
  fitness<fitness/scalar>: { of: Int64, maximise: true }
  representation<representation/koza_tree>:
    min_depth: 1
    max_depth: 17
    inputs:
      - "a0::Bool"
      - "a1::Bool"
      - "a2::Bool"
      - "d0::Bool"
      - "d1::Bool"
      - "d2::Bool"
      - "d3::Bool"
      - "d4::Bool"
      - "d5::Bool"
      - "d6::Bool"
      - "d7::Bool"
    terminals:
      - "true::Bool"
      - "false::Bool"
      - "a0::Bool"
      - "a1::Bool"
      - "a2::Bool"
      - "d0::Bool"
      - "d1::Bool"
      - "d2::Bool"
      - "d3::Bool"
      - "d4::Bool"
      - "d5::Bool"
      - "d6::Bool"
      - "d7::Bool"
    non_terminals:
      - "and(a::Bool, b::Bool)::Bool = a && b"
      - "or(a::Bool, b::Bool)::Bool = a || b"
      - "not(a::Bool)::Bool = !a"
      - "if_then_else(a::Bool, b::Bool, c::Bool)::Bool = a ? b : c"
  
_my_breeder<breeder/simple>:
  selection<selection/tournament>: { size: 7 }
  mutation<mutation/subtree>: { rate: 0.01 }
  crossover<crossover/subtree>: { rate: 0.9 }

population<population/simple>:
  size:     100
  species:  $(_my_species)
  breeder:  $(_my_breeder)
